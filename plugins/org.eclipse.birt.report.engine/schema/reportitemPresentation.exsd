<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="org.eclipse.birt.report.engine">
<annotation>
      <appInfo>
         <meta.schema plugin="org.eclipse.birt.report.engine" id="reportitemPresentation" name="Extended Item Presentation-Time Support"/>
      </appInfo>
      <documentation>
         This extension point specifies how the new report item should be instantiated,  processed, and rendered at presentation (rendering) time. In a server environment, the plugin registry uses this extension point registration to discover supported report item extensions.
      </documentation>
   </annotation>

   <element name="extension">
      <complexType>
         <sequence>
            <element ref="reportItem" minOccurs="1" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  a fully qualified identifier of the target extension point
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  an optional identifier of the extension instance
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  an optional name of the extension instance
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="reportItem">
      <complexType>
         <attribute name="name" type="string" use="required">
            <annotation>
               <documentation>
                  the name of the extended item, i.e., &quot;chart&quot; for chart extension.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="class" type="string" use="required">
            <annotation>
               <documentation>
                  the java class that implements the &lt;code&gt;IReportItemPresentation&lt;/code&gt;
               </documentation>
            </annotation>
         </attribute>
         <attribute name="needDeserialization" type="boolean" use="default" value="false">
            <annotation>
               <documentation>
                  whether the extended item needs serialization service in factory
               </documentation>
            </annotation>
         </attribute>
         <attribute name="supportedFormats" type="string">
            <annotation>
               <documentation>
                  The supported rendering formats for this extended item. The value for this attribute is a comma-separated string, i.e., &quot;HTML,PDF,EXCEL&apos;, etc. The string is case-insensitive.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appInfo>
         <meta.section type="since"/>
      </appInfo>
      <documentation>
         1.0
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="examples"/>
      </appInfo>
      <documentation>
         The following is a sample usage of the reportItemPresentation extension point:

&lt;p&gt;
&lt;pre&gt;
&lt;extension point=&quot;org.eclipse.birt.report.engine.reportitemPresentation&quot; 
name=&quot;chart presentation extension&quot;&gt;
  &lt;reportItem name=&quot;chart&quot; class=&quot;org.eclipse.birt.report.chartitem.ChartPresentation&quot; needDeserialization=&quot;true&quot; 
  supportedFormats=&quot;FO,HTML,PDF&quot;/&gt;
 &lt;/extension&gt;
 &lt;/pre&gt;
 &lt;p&gt;
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="apiInfo"/>
      </appInfo>
      <documentation>
         The value of the class attribute must be the fully qualified name of a class that implements &lt;code&gt;org.eclipse.birt.engine.extension.IReportItemPresentation&lt;/code&gt;. The interface provides the following functions:

&lt;li&gt;&lt;code&gt;void initialize(HashMap parameters)&lt;/code&gt; ---- performs initialization before the plugin is asked to do rendering tasks&lt;/li&gt;
&lt;li&gt;&lt;code&gt;void restore(InputStream instream)&lt;/code&gt; ---- De-serializes the peer state that was serialized during generation time. This function is currently not supported.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;void render()&lt;/code&gt; ---- renders the extended item for output.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;int getOutputType(String format, int[] supportedTypes, String mimeType)&lt;/code&gt; ---- Output type could be image, text, HTML text, etc. Only image is supported now.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Object getSize()&lt;/code&gt; ---- Get the size of the extended item. The size is a Dimension object. The width and height can only be in absolute units (inch, mm, etc.) or pixel. It can not be a relative size such as 150% or 1.2em. An extended item can obtain its design-time size information by querying DE. This function is needed because the actual size may not be the same as the design-time size.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;void finish()&lt;/code&gt; ---- clean up&lt;/li&gt;
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="implementation"/>
      </appInfo>
      <documentation>
         Chart as an extended item
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="copyright"/>
      </appInfo>
      <documentation>
         
      </documentation>
   </annotation>

</schema>
